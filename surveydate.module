<?php
/**
 * Implements hook_permission().
 */
function surveydate_permission() {
  return array(
    'access surveydate content' => array(
      'title' => t('Access content for the Survey Date module'),
    ),
    'access update surveydate content' => array(
      'title' => t('Access content for the Update Survey Date module'),
    )
  );
}


/**
 * Implements hook_menu().
 */
function surveydate_menu(){
  $items = array();
  $items['surveydate'] = array(
    'title' => t('Survey Date'),
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('surveydate_form'),
    'access arguments' => array('access surveydate content'),
    'description' => t('Survey Date'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['update_surveydate'] = array(
    'title' => 'Update Survey Date',
    'page callback' => '_update_surveydate_page',
    'access arguments' => array('access update surveydate content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}


/**
 * This function is called the "form builder". It builds the form.
 * Notice, it takes one argument, the $form_state
 */
function surveydate_form($form_state) {

  global $user;

  $form = array();

  $form['title'] = array(
    '#required' => '0',
    '#weight' => '0',
    '#size' => 60,
    '#maxlength' => 255,
    '#type' => 'textfield',
    '#title' => t('Title'),
  );

  $form['description'] = array(
    '#required' => '0',
    '#weight' => '0',
    '#rows' => 5,
    '#cols' => 60,
    '#wysiwyg' => false,
    '#type' => 'textarea',
    '#title' => t('Description'),
  );

  $form['name'] = array(
    '#required' => '0',
    '#weight' => '2',
    '#size' => 60,
    '#maxlength' => 255,
    '#default_value' => $user->name,
    '#type' => 'textfield',
    '#title' => t('Name'),
  );

  $form['email'] = array(
    '#required' => '0',
    '#weight' => '3',
    '#size' => 60,
    '#maxlength' => 255,
    '#default_value' => $user->mail,
    '#type' => 'textfield',
    '#title' => t('E-Mail'),
  );

  $form['location'] = array(
    '#required' => '0',
    '#weight' => '4',
    '#size' => 60,
    '#maxlength' => 255,
    '#type' => 'textfield',
    '#title' => t('Location'),
  );

  $form['date'] = array(
    '#required' => '0',
    '#weight' => '5',
    '#size' => 60,
    '#maxlength' => 255,
    '#type' => 'textfield',
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
  );

  return $form;
}

function surveydate_form_validate($form, &$form_state) {
    /*$year_of_birth = $form_state['values']['year_of_birth'];
    if ($year_of_birth && ($year_of_birth < 1900 || $year_of_birth > 2000)) {
        form_set_error('year_of_birth', 'Enter a year between 1900 and 2000.');
    }*/
}


// Adds a submit handler/function to our form to send a successful
// completion message to the screen.
function surveydate_form_submit($form, &$form_state) {
    save_surveydate($form);
    drupal_set_message(t('The form has been submitted.'));
    
    
}

function save_surveydate($form) {
    global $user;

    $objNode = new stdClass();
    $objNode->title = $form['title']['#value'];
    $objNode->type = 'surveydate';

    node_object_prepare($objNode); // Sets some defaults. Invokes hook_prepare() and hook_node_prepare().

    $objNode->uid = $user->uid;

    $objNode->language = LANGUAGE_NONE; // Or e.g. 'en' if locale is enabled
    $objNode->status = 1; //(1 or 0): published or not
    $objNode->promote = 0; //(1 or 0): promoted to front page
    $objNode->comment = 2; // 0 = comments disabled, 1 = read only, 2 = read/write

    $objNode->field_description[LANGUAGE_NONE][0]['value'] = $form['description']['#value'];
    $objNode->field_name[LANGUAGE_NONE][0]['value']        = $form['name']['#value'];
    $objNode->field_email[LANGUAGE_NONE][0]['value']       = $form['email']['#value'];
    $objNode->field_location[LANGUAGE_NONE][0]['value']    = $form['location']['#value'];
    $objNode->field_date[LANGUAGE_NONE][0]['value']        = $form['date']['#value'];
    $objNode->field_survey[LANGUAGE_NONE][0]['value']      = '';
    $objNode->field_result[LANGUAGE_NONE][0]['value']      = '';

    $objNode = node_submit($objNode); // Prepare node for saving
    node_save($objNode);

    // Create a path alias for the node.
    $domain = md5($user->name . time());

    $path['alias'] = $domain;
    $path['source'] = 'node/' . $objNode->nid;
    $path['language'] = LANGUAGE_NONE;
    path_save($path);


    
     
     //Dun test mail code
     global $base_url;

   // drupal_set_message($path['source']);  
    //drupal_set_message($base_url);  
    
    $subject = t('Dun test code'); // subject of e-mail
  //  $body = "Hi".$form['name']['#value']." You had created a activity survey form. The path is http://54.199.171.173/drupal".$domain; //it might be any variable from the form eg. $form_state['values']['your_field']
    $body=t("Hi @name.\n\nYou has created a new surveydate activity.\n\n E-mail sent from @site-name and survey path is @site-path.\n\n ",
     array('@name' => $user->name,
    	   '@site-name' => variable_get('site_name', 'Drupal'),
    	   '@site-path' => $base_url.'/'.$domain,// . '/' . drupal_get_path('module', 'custom')('site_path', 'Drupal'),
    	   )
     );
 //echo $base_url . '/' . drupal_get_path('module', 'custom') .
//params is the array passed to hook_mail function 
    $params = array(
     'subject' => $subject,
     'body' => array(token_replace($body, array('callback' => 'user_mail_tokens', 'sanitize' => FALSE)),),
     );
     
   $user_address=$form['email']['#value'];
  // drupal_set_message($user_address);
   
	if (phpmailer_enabled()) {
      drupal_mail('surveydate', 'surveydate_submit', $user_address, language_default(),$params);
//      drupal_set_message(t('phpmailer was enabled.'));
    }
    // Otherwise, prepare and send the test mail manually.
    else {
      // Prepare the message without sending.
      $message = drupal_mail('surveydate', 'surveydate_submit', $user_address, NULL, $params, NULL, FALSE);
      // Send the message. drupal_mail_wrapper() is only defined when PHPMailer
      // is enabled, so drupal_mail_send() cannot be used.
      // @see drupal_mail_send()
      //module_load_include('inc', 'phpmailer', 'includes/phpmailer.drupal');
      //phpmailer_send($message);
  //    drupal_set_message(t('phpmailer was disabled.')); 
    }
    drupal_goto($domain);

}

/**
 * Implementation of hook_mail().
 */

//}

function surveydate_mail($key, &$message, $params) {
  global $user;

  // Each message is associated with a language, which may or may not be the
  // current user's selected language, depending on the type of e-mail being
  // sent. This $options array is used later in the t() calls for subject
  // and body to ensure the proper translation takes effect.
  $options = array(
    'langcode' => $message['language']->language,
  );

  switch ($key) {
    // Send a simple message from the contact form.
    case 'contact_message':
      $message['subject'] = t('E-mail sent from @site-name', array('@site-name' => variable_get('site_name', 'Drupal')), $options);
      // Note that the message body is an array, not a string.
      $message['body'][] = t('@name sent you the following message:', array('@name' => $user->name), $options);
      // Because this is just user-entered text, we do not need to translate it.
      // Since user-entered text may have unintentional HTML entities in it like
      // '<' or '>', we need to make sure these entities are properly escaped,
      // as the body will later be transformed from HTML to text, meaning
      // that a normal use of '<' will result in truncation of the message.
      $message['body'][] = check_plain($params['message']);
      break;
      case 'surveydate_submit':  
     // drupal_set_message(t('Case= Surveydate_submit'));
	  $message['subject'] = t('E-mail sent from @site-name', array('@site-name' => variable_get('site_name', 'Drupal')), $options);
      // Note that the message body is an array, not a string.
	  
	  $message['body'] = $params['body'];
      //$message['body'][] = t('@name sent you the following message:', array('@name' => $user->name), $options);
      //$message['body'][] = check_plain($params['message']);
   //   drupal_set_message($params['body']);  
    
	  break;
		
  }
}


function _update_surveydate_page() {
   $oMessage = new stdClass();

   $json = file_get_contents('php://input');
   $obj  = json_decode($json);

   $tmp = explode('/',drupal_get_normal_path($obj->path));
   $nid = $tmp[1];
   $node = node_load($nid);

   if ( $node ) {
      $data = $node->field_survey[LANGUAGE_NONE][0]['value'];
      $ay = json_decode($data);
      $ay[] = $obj->data;
      $ayResult = json_decode($node->field_result[LANGUAGE_NONE][0]['value']);
      foreach($ay as $key=>$row){
	      foreach($row as $i=>$value){
		      $ayResult[$i] += $value;
	      }
      }
      $node->field_survey[LANGUAGE_NONE][0]['value'] = json_encode($ay);
      $node->field_result[LANGUAGE_NONE][0]['value'] = json_encode($ayResult);
      node_save($node);

      $oMessage->code = 1;
      $oMessage->message = 'OK';
   } else {
      $oMessage->code = 0;
      $oMessage->message = 'ERROR';
   }

   echo json_encode($oMessage);
}

?>
